<launch>


    <!-- 控制器 -->
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find sentry_control)/config/sentry_control.yaml" command="load" />

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/sentry"
        args="
    spin_rightback_joint_controller spin_leftback_joint_controller
    spin_rightfront_joint_controller spin_leftfront_joint_controller
    wheel_rightback_joint_controller wheel_leftback_joint_controller
    wheel_rightfront_joint_controller wheel_leftfront_joint_controller
    joint_state_controller" />

    <!-- 加载世界 -->
    <arg name="world_file" default="$(find sentry_gazebo)/worlds/rmuc_sentry_lidar_imu.world" />
    <node name="gazebo" pkg="gazebo_ros" type="gazebo" args="$(arg world_file)">
        <param name="world_name" value="$(arg world_file)" />
    </node>


    <!-- 加载机器人模型描述参数 -->
    <!--    <param name="robot_description" textfile="$(find sentry_model)/urdf/sentry_model.urdf"
    />-->
    <param name="robot_description" textfile="$(find sentrymodel_1225)/urdf/sentrymodel_1225.urdf" />

    <!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher_gui"
        type="joint_state_publisher_gui"></node>

    <!-- 运行robot_state_publisher节点，发布tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        output="screen">
        <param name="publish_frequency" type="double" value="50.0" />
    </node>
    <node name="sentry_teleop" pkg="sentry_teleop" type="sentry_teleop.py" output="screen">
        <param name="scale_linear" value="0.1" type="double" />
        <param name="scale_angular" value="0.4" type="double" />
    </node>

</launch>